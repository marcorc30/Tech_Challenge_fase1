import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import streamlit as st
from os import listdir
from io import StringIO
import plotly.express as px
import requests

# configurando a p√°igna

st.set_page_config(
    page_title="An√°lise de dados",
    page_icon="üßä",
    layout="wide"
)

st.title(':rain_cloud: :sun_with_face: AN√ÅLISE DO IMPACTO DO CLIMA NA EXPORTA√á√ÉO DE VINHO :tornado_cloud: :thermometer:')

#### obtendo dados de geolocalizacao
url = 'https://labdados.com/produtos'
response = requests.get(url)
geo_localizacao = pd.DataFrame.from_dict(response.json())
geo_localizacao = geo_localizacao[['Local da compra', 'lat', 'lon']].drop_duplicates().sort_values(by='Local da compra')
geo_localizacao = geo_localizacao.rename(columns={'Local da compra': 'UF'})
geo_localizacao = geo_localizacao.set_index('UF')

#### obtendo dados de exporta√ß√£o por estado
dados_exportacao = pd.read_csv('dados/_EXP_2023.csv', sep=',')
exp_2023 = dados_exportacao.groupby(['CO_ANO', 'SG_UF_NCM']).sum().reset_index()
exp_2023_geo = exp_2023.merge(geo_localizacao, left_on='SG_UF_NCM', right_index=True)


#### obtendo dados das esta√ß√µes clim√°ticas
arquivos_em = listdir('dados/metereologicos/')

dados_climaticos = pd.DataFrame()

for index, arquivo in enumerate(arquivos_em):   
    # criando uma string com o nome do n√∫mero da esta√ß√£o metereologica
    estacao = arquivo[:11]; 
    
    # atribuindo a string a um nome de vari√°vel
    globals()[estacao] = pd.read_csv('dados/metereologicos/' + arquivo, sep=";", skiprows=10)
    
    # obtendo o nome da estacao na primeira linha do aquivo
    with open('dados/metereologicos/' + arquivo, 'r') as arquivo:
        for texto in arquivo.readlines():

            if (texto.startswith('Nome')):
                nome_estacao = texto[6:]

            if (texto.startswith('Codigo')):
                codigo_estacao = texto[16:]
                        
    # adicionando uma coluna com o nome da estacao    
    globals()[estacao].insert(1, 'DC_NOME', nome_estacao.replace('\n',''))
    globals()[estacao].insert(2, 'CD_ESTACAO', codigo_estacao.replace('\n',''))
    
    # consolidando todos os dados em um √∫nico dataframe
    dados_climaticos = pd.concat([dados_climaticos,globals()[estacao]])

# removendo colunas n√£o utilizadas, e excluindo dados nulos
dados_climaticos.drop(['Unnamed: 1', 'Unnamed: 7'], axis=1, inplace=True)
dados_climaticos.dropna()

# Obtendo informa√ß√µes sobre as estacoes metereologicas:
# https://portal.inmet.gov.br/
estacoes_convencionais = pd.read_csv('dados/estacoes/CatalogoEstacoesAutomaticas.csv', sep=";")
estacoes_automaticas = pd.read_csv('dados/estacoes/CatalogoEstacoesConvencionais.csv', sep=";")
    
# criando coluna para identificar o tipo da estacao
estacoes_convencionais['TIPO'] = 'convencional'
estacoes_automaticas['TIPO'] = 'automatica'

# unindo os dados de todas as estacoes em um √∫nico dataframe
estacoes_operantes = pd.concat([estacoes_automaticas, estacoes_convencionais])

# filtrando somente as colunas necess√°rias
estacoes_operantes = estacoes_operantes[['DC_NOME', 'SG_ESTADO', 'CD_ESTACAO', 'TIPO']]


dados_climaticos['CD_ESTACAO'] = dados_climaticos['CD_ESTACAO'].astype('int64')

# fazendo um merge entre as estacoes operantes e os dados metereologicos
dados_consolidados = estacoes_operantes.merge(dados_climaticos,  how='inner', on='CD_ESTACAO')

dados_consolidados.dropna(inplace=True)

dados_consolidados.drop('DC_NOME_y', axis=1, inplace=True)
dados_consolidados.rename(columns={"DC_NOME_x":"DC_NOME"}) 

# renomeando colunas
dados_consolidados.columns = ['NM_ESTACAO', 'SG_UF_ESTADO', 'CD_ESTACAO', 'TP_ESTACAO', 'DT_MEDICAO',
       'NUMERO_DIAS_COM_PRECIP_PLUV',
       'PRECIPITACAO_TOTAL_EM_MILIMETROS',
       'TEMPERATURA_MAXIMA_MEDIA',
       'TEMPERATURA_MEDIA_COMPENSADA',
       'TEMPERATURA_MINIMA_MEDIA',
       'UMIDADE_RELATIVA_DO_AR_MEDIA_MENSAL_PORCENTAGEM']

# Converter a coluna DT_MEDICAO para tipo date
dados_consolidados['DT_MEDICAO'] = pd.to_datetime(dados_consolidados['DT_MEDICAO'])

# Criando a coluna ANO
dados_consolidados['ANO'] = dados_consolidados['DT_MEDICAO'].dt.year



# criando a coluna REGIAO
ufs_regiao = """Unidade federativa	Sigla	Regi√£o
Acre	AC	Regi√£o Norte
Alagoas	AL	Regi√£o Nordeste
Amap√°	AP	Regi√£o Norte
Amazonas	AM	Regi√£o Norte
Bahia	BA	Regi√£o Nordeste
Cear√°	CE	Regi√£o Nordeste
Distrito Federal	DF	Regi√£o Centro-Oeste
Esp√≠rito Santo	ES	Regi√£o Sudeste
Goi√°s	GO	Regi√£o Centro-Oeste
Maranh√£o	MA	Regi√£o Nordeste
Mato Grosso	MT	Regi√£o Centro-Oeste
Mato Grosso do Sul	MS	Regi√£o Centro-Oeste
Minas Gerais	MG	Regi√£o Sudeste
Par√°	PA	Regi√£o Norte
Para√≠ba	PB	Regi√£o Nordeste
Paran√°	PR	Regi√£o Sul
Pernambuco	PE	Regi√£o Nordeste
Piau√≠	PI	Regi√£o Nordeste
Rio de Janeiro	RJ	Regi√£o Sudeste
Rio Grande do Norte	RN	Regi√£o Nordeste
Rio Grande do Sul	RS	Regi√£o Sul
Rond√¥nia	RO	Regi√£o Norte
Roraima	RR	Regi√£o Norte
Santa Catarina	SC	Regi√£o Sul
S√£o Paulo	SP	Regi√£o Sudeste
Sergipe	SE	Regi√£o Nordeste
Tocantins	TO	Regi√£o Norte"""


# funcao para mapear a regiao
regioes_io = StringIO(ufs_regiao)
regioes = pd.read_csv(regioes_io, sep="\t")
ufs = list([regioes['Sigla']])
regiao = list([regioes['Regi√£o']])
dict_regiao = {}

for i in range(27):
    uf = ufs[0][i]
    reg = regiao[0][i]

    dict_regiao[uf] = reg


# criando o campo regiao mapeando a funcao acima
dados_consolidados['REGIAO'] = dados_consolidados['SG_UF_ESTADO'].map(dict_regiao)  

dados_agrupados_por_estados = dados_consolidados.groupby(by=['SG_UF_ESTADO','ANO']).mean(numeric_only=True).reset_index()
dados_agrupados_por_regiao = dados_consolidados.groupby(by=['SG_UF_ESTADO','REGIAO', 'ANO']).mean(numeric_only=True).reset_index()


# Obtendo dados da exporta√ß√£o / produ√ß√£o de vinhos
dados_vinho = pd.read_excel('dados/data.xlsx', skipfooter=2, engine='openpyxl')

# necess√°rio rodar: pip install openpyxl
dados_vinho = pd.read_excel('dados/data.xlsx', skipfooter=2, engine='openpyxl')
dados_vinho = dados_vinho.rename(columns={'Region/Country':'Country'})
producao = dados_vinho.query('Variable == "Production"')
exportacao = dados_vinho.query('Variable == "Exports"')


# definindo graficos dos dados climaticos

lista_estados = ['RS']
dados_temperatura_media = dados_agrupados_por_estados.query('SG_UF_ESTADO == @lista_estados')[['ANO','TEMPERATURA_MEDIA_COMPENSADA','SG_UF_ESTADO']]
dados_temperatura_minima = dados_agrupados_por_estados.query('SG_UF_ESTADO == @lista_estados')[['ANO','TEMPERATURA_MINIMA_MEDIA','SG_UF_ESTADO']]
dados_temperatura_maxima = dados_agrupados_por_estados.query('SG_UF_ESTADO == @lista_estados')[['ANO','TEMPERATURA_MAXIMA_MEDIA','SG_UF_ESTADO']]
dados_precipitacao = dados_agrupados_por_estados.query('SG_UF_ESTADO == @lista_estados')[['ANO','PRECIPITACAO_TOTAL_EM_MILIMETROS','SG_UF_ESTADO']]
dados_umidade_relativa = dados_agrupados_por_estados.query('SG_UF_ESTADO == @lista_estados')[['ANO','UMIDADE_RELATIVA_DO_AR_MEDIA_MENSAL_PORCENTAGEM','SG_UF_ESTADO']]

# analise de correla√ß√£o
dados_exportacao_brasil = dados_vinho.query('Country == "Brazil" and Variable == "Exports"') 
dados_climaticos_brasil = dados_agrupados_por_estados.query('SG_UF_ESTADO == "RS"')
dados_exportacao_clima = dados_exportacao_brasil.merge(dados_climaticos_brasil, left_on='Year', right_on='ANO')
dados_exportacao_clima.columns = ['CONTINENTE', 'PAIS', 'PRODUTO', 'VARIAVEL', 'ANO_', 'UNIDADE',
    'TOTAL_EXPORTADO', 'SG_UF_ESTADO', 'ANO', 'NUMERO_DIAS_COM_PRECIP_PLUV',
    'PRECIPITACAO_TOTAL_EM_MILIMETROS', 'TEMPERATURA_MAXIMA_MEDIA',
    'TEMPERATURA_MEDIA_COMPENSADA', 'TEMPERATURA_MINIMA_MEDIA',
    'UMIDADE_RELATIVA_DO_AR_MEDIA_MENSAL_PORCENTAGEM']

dados_exportacao_clima_correlacao = dados_exportacao_clima[['TOTAL_EXPORTADO', 'NUMERO_DIAS_COM_PRECIP_PLUV',
    'PRECIPITACAO_TOTAL_EM_MILIMETROS', 'TEMPERATURA_MAXIMA_MEDIA',
    'TEMPERATURA_MEDIA_COMPENSADA', 'TEMPERATURA_MINIMA_MEDIA',
    'UMIDADE_RELATIVA_DO_AR_MEDIA_MENSAL_PORCENTAGEM']]






# criando gr√°ficos


fig_scatter_exportacao_temperatura_media = px.scatter(dados_exportacao_clima_correlacao,
                                                      x = 'TOTAL_EXPORTADO',
                                                      y = 'TEMPERATURA_MEDIA_COMPENSADA',
                                                      title= 'Dispers√£o Exporta√ß√£o x Temperatura M√©dia')

fig_scatter_exportacao_temperatura_maxima = px.scatter(dados_exportacao_clima_correlacao,
                                                      x = 'TOTAL_EXPORTADO',
                                                      y = 'TEMPERATURA_MAXIMA_MEDIA',
                                                      title= 'Dispers√£o Exporta√ß√£o x Temperatura M√°xima')

fig_scatter_exportacao_temperatura_minima = px.scatter(dados_exportacao_clima_correlacao,
                                                      x = 'TOTAL_EXPORTADO',
                                                      y = 'TEMPERATURA_MINIMA_MEDIA',
                                                      title= 'Dispers√£o Exporta√ß√£o x Temperatura M√≠nima')

fig_scatter_exportacao_umidade = px.scatter(dados_exportacao_clima_correlacao,
                                                      x = 'TOTAL_EXPORTADO',
                                                      y = 'UMIDADE_RELATIVA_DO_AR_MEDIA_MENSAL_PORCENTAGEM',
                                                      title= 'Dispers√£o Exporta√ß√£o x Umidade Relativa do Ar')


fig_scatter_exportacao_precipitacao = px.scatter(dados_exportacao_clima_correlacao,
                                                      x = 'TOTAL_EXPORTADO',
                                                      y = 'PRECIPITACAO_TOTAL_EM_MILIMETROS',
                                                      title= 'Dispers√£o Exporta√ß√£o x Preipita√ß√£o')



fig_temperatura_media = px.line(dados_temperatura_media, 
                                x = 'ANO', 
                                y = 'TEMPERATURA_MEDIA_COMPENSADA',
                                range_y=(0,40),
                                # markers=True,
                                # color="ANO",
                                # line_dash='ANO',
                                title="Temperatura M√©dia Compensada")

fig_temperatura_minima = px.line(dados_temperatura_minima, 
                                x = 'ANO', 
                                y = 'TEMPERATURA_MINIMA_MEDIA',
                                range_y=(0,40),
                                # markers=True,
                                # color="ANO",
                                # line_dash='ANO',
                                title="Temperatura Min√≠ma (M√©dia)")

fig_temperatura_maxima = px.line(dados_temperatura_maxima, 
                                x = 'ANO', 
                                y = 'TEMPERATURA_MAXIMA_MEDIA',
                                range_y=(0,40),
                                # markers=True,
                                # color="ANO",
                                # line_dash='ANO',
                                title="Temperatura M√°xima (M√©dia)")


fig_precipitacao = px.line(dados_precipitacao, 
                           x = 'ANO', 
                           y = 'PRECIPITACAO_TOTAL_EM_MILIMETROS',
                           title="Precipita√ß√£o MM")

fig_umidade = px.line(dados_umidade_relativa, 
                      x = 'ANO', 
                      y = 'UMIDADE_RELATIVA_DO_AR_MEDIA_MENSAL_PORCENTAGEM',
                      title="Umidade Relativa do Ar")


fig_exportacao_precipitacao = px.line(exportacao.query('Country == "Brazil"'), 
                                      x = 'Year', 
                                      y = 'Quantity',
                                      title="Total Exportado")

fig_precipitacao_exportacao = px.line(dados_precipitacao, 
                                      x = 'ANO', 
                                      y = 'PRECIPITACAO_TOTAL_EM_MILIMETROS',
                                      title="Precipita√ß√£o")

correlacao = dados_exportacao_clima_correlacao.corr("pearson")
fig_correlacao = px.imshow(correlacao, text_auto=True, aspect="auto")


# criando abas no dashboard
aba1, aba2, aba3, aba4, aba5, aba6 = st.tabs(['Geolocaliza√ß√£o', 'Dados Clim√°ticos', 'Exporta√ß√£o x Dados Clim√°ticos', 'Dispers√£o', 'Correla√ß√£o', 'Conclus√£o'])

with aba1:
   

    with st.container():
        st.write("### Estados exportadores de vinho no Brasil")

        with st.expander("Descri√ß√£o da An√°lise"):
            st.write("""Para se analisar o impacto do clima na produ√ß√£o e exporta√ß√£o de vinho no Brasil,
                     primeiramente temos que encontrar qual estado √© o maior produtor e exportador, e a partir
                     dessa an√°lise, podemos avaliar como o clima influencia nesse estado. Nos gr√°ficos 
                     abaixo, podemos observar que v√°rios estados brasileiros produzem e exportam vinhos, mas o
                     Rio Grande do Sul √© o respons√°vel pela maioria das produ√ß√µes. Portanto, vamos nos basear
                     em como a interfer√™ncia do clima altera ou n√£o a produ√ß√£o e exporta√ß√£o desse estado.""")    
            
        qtd_estados = st.number_input('Quantidade de Estados Apresentados nos Gr√°ficos', 2, 10, 3)        

    coluna1,coluna2 = st.columns(2)

    fig_mapa_exportacao_quantidade = px.scatter_geo(exp_2023_geo.sort_values(by='KG_LIQUIDO', ascending=False).head(qtd_estados),
                                    lat='lat',
                                    lon='lon',
                                    scope='south america',
                                    size='KG_LIQUIDO',
                                    template='seaborn',
                                    hover_name='SG_UF_NCM',
                                    hover_data={'lat':True, 'lon':True},
                                    color = "SG_UF_NCM",  
                                    title=f'Top {qtd_estados} dos Estados Exportadores de Vinho - KG LIQUIDO')




    fig_mapa_exportacao = px.scatter_geo(exp_2023_geo,
                                    lat='lat',
                                    lon='lon',
                                    scope='south america',
                                    template='seaborn',
                                    hover_name='SG_UF_NCM',
                                    hover_data={'lat':True, 'lon':True},
                                    color = "SG_UF_NCM",  
                                    title='Estados Exportadores de Vinho')



    fig_mapa_exportacao_quantidade_pizza = px.pie(exp_2023_geo.sort_values(by='KG_LIQUIDO', ascending=False).head(qtd_estados),
                                                labels='SG_UF_NCM',
                                                values='KG_LIQUIDO',
                                                title=f'Top {qtd_estados} dos Estados Exportadores de Vinho - KG LIQUIDO'
   
                                               )

    fig_mapa_exportacao_quantidade_pizza.update_layout(
                                                    paper_bgcolor='rgb(248, 248, 255)',
                                                    plot_bgcolor='rgb(248, 248, 255)',) 


    fig_mapa_exportacao_quantidade_bar = px.bar(exp_2023_geo.sort_values(by='KG_LIQUIDO', ascending=False).head(qtd_estados),
                                                y='SG_UF_NCM',
                                                x='KG_LIQUIDO',
                                                orientation='h',
                                                hover_data='KG_LIQUIDO',
                                                title=f'Top {qtd_estados} dos Estados Exportadores de Vinho - KG LIQUIDO'
                                                )
    fig_mapa_exportacao_quantidade_bar.update_layout(xaxis = dict(showgrid=True, showline=True),
                                                    yaxis = dict(showgrid=True, showline=True),
                                                    barmode='stack',
                                                    paper_bgcolor='rgb(248, 248, 255)',
                                                    plot_bgcolor='rgb(248, 248, 255)',) 


 
    with coluna1:
        st.plotly_chart(fig_mapa_exportacao, use_container_width=True)
        st.plotly_chart(fig_mapa_exportacao_quantidade_pizza, use_container_width=True)

    with coluna2:
        st.plotly_chart(fig_mapa_exportacao_quantidade, use_container_width=True)
        st.plotly_chart(fig_mapa_exportacao_quantidade_bar, use_container_width=True)


with aba2:
    with st.container():
        st.write("### An√°lise da condi√ß√£o clim√°tica no Rio Grande do Sul")

        with st.expander("Descri√ß√£o da An√°lise"):
            st.write("""
                Abaixo estamos exibindo os gr√°ficos das condi√ß√µes clim√°ticas entre os anos de 2008 e 2022, como temperatura media, temperatura m√≠nima, temperatura m√°xima, precipita√ß√£o, unidade relativa do ar,
                    e umidade relativa do ar. Essas informa√ß√µes ser√£o de suma import√¢ncia na an√°lise do impacto do clima,
                    tendo a possibilidade de inferir se h√° ou n√£o alguma correla√ß√£o entre as vari√°veis clim√°ticas e n√∫meros de exporta√ß√£o.
                    As informa√ß√µes, foram coletadas no site do imnpe, obtendo dados de todas das esta√ß√µes clim√°ticas, desde 2008 at√© o ano de 2022, num total de 350 esta√ß√µes (convencionais e autom√°ticas). """)    
    coluna1, coluna2 = st.columns(2)

    with coluna1:
        st.plotly_chart(fig_temperatura_media, use_container_width=True)
        st.plotly_chart(fig_temperatura_minima, use_container_width=True)
        st.plotly_chart(fig_temperatura_maxima, use_container_width=True)

    with coluna2:
        st.plotly_chart(fig_umidade, use_container_width=True)
        st.plotly_chart(fig_precipitacao, use_container_width=True)


with aba3:
    with st.container():
        st.write("### Comparativo Total Exporta√ß√£o x Dados Clim√°ticos")

    with st.expander("Descri√ß√£o da An√°lise"):
        st.write("""
                Abaixo estamos exibindo um comparativo entre os gr√°ficos das varia√ß√µes clim√°ticas e  os
                 gr√°ficos dos valores das exporta√ß√µes de vinho, lado a lado. Percebe-se que visualmente n√£o h√° semelhan√ßa
                 aparente, o que nos leva a uma hip√≥tese que n√£o h√° qualquer rela√ß√£o entre as vari√°veis.""")    

    coluna1, coluna2 = st.columns(2)

    with coluna1:
        st.plotly_chart(fig_exportacao_precipitacao, use_container_width=True)
        st.plotly_chart(fig_exportacao_precipitacao, use_container_width=True)
        st.plotly_chart(fig_exportacao_precipitacao, use_container_width=True)
        st.plotly_chart(fig_exportacao_precipitacao, use_container_width=True)
        st.plotly_chart(fig_exportacao_precipitacao, use_container_width=True)

    with coluna2:
        st.plotly_chart(fig_precipitacao, use_container_width=True)
        st.plotly_chart(fig_temperatura_maxima, use_container_width=True)
        st.plotly_chart(fig_temperatura_minima, use_container_width=True)
        st.plotly_chart(fig_temperatura_media, use_container_width=True)
        st.plotly_chart(fig_umidade, use_container_width=True)


with aba4:
    with st.container():
        st.write("### Comparativo Exporta√ß√£o x Dados Clim√°ticos")

    with st.expander("Descri√ß√£o da An√°lise"):
        st.write("""
                Abaixo estamos exibindo um gr√°fico de dispers√£o entre as vari√°veis clim√°ticas e os valores
                 exportados. Percebemos claramente que n√£o h√° nenhum padr√£o ou tend√™ncias nessa rela√ß√£o
                 em nenhuma das vari√°veis clim√°ticas analisadas, o que nos leva a levantar a hip√≥tese que 
                 realmente n√£o h√° rela√ß√£o entre as vari√°veis.""")    

    coluna1, coluna2 = st.columns(2)

    with coluna1:
        st.plotly_chart(fig_scatter_exportacao_temperatura_media, use_container_width=True)
        st.plotly_chart(fig_scatter_exportacao_temperatura_minima, use_container_width=True)
        st.plotly_chart(fig_scatter_exportacao_temperatura_maxima, use_container_width=True)

    with coluna2:
        st.plotly_chart(fig_scatter_exportacao_umidade, use_container_width=True)
        st.plotly_chart(fig_scatter_exportacao_precipitacao, use_container_width=True)
            


with aba5:
    with st.container():
        st.write("### Correla√ß√£o entre os dados clim√°ticos o de exporta√ß√£o de vinho")

    with st.expander("Descri√ß√£o da An√°lise"):
        st.write("""
                Abaixo estamos exibindo um gr√°fico com mapa de calor que exibe a correla√ß√£o entre os dados clim√°ticos
                 e os valores exportados no estado do Rio Grande do Sul. Podemos observar na primeira linha ou primeira coluna, a baixa correla√ß√£o entre
                 essas vari√°veis, o que confirma nossa hip√≥tese de n√£o haver influ√™ncia espec√≠fica do clima na exporta√ß√£o e 
                 produ√ß√£o de vinho.""")    

    st.plotly_chart(fig_correlacao, use_container_width=True)
    
with aba6:
     with st.container():    
        st.markdown("""
            # Conclus√£o

            Fundamentado nas informa√ß√µes coletadas a respeito do que foi proposto nos objetivos deste estudo, chegou-se √†s seguintes conclus√µes.

            * N√£o √© apenas um fator clim√°tico isolado que impacta na produ√ß√£o e exporta√ß√£o de vinhos;
            * As vari√°veis analisadas isoladamente, n√£o tem correla√ß√£o com a exporta√ß√£o;
            * Gr√°ficos de dispers√£o apresentados, confirmam nossas hip√≥teses;
            * As caracter√≠sticas do terroir d√£o a cada vinho aromas, sabores e colora√ß√µes √∫nicos, sendo que o clima √© apenas uma parte dessa contribui√ß√£o, por√©m muito importante no processo de produ√ß√£o da bebida. 

            * Falar de terroir √© falar de um conjunto de fatores como:
                * Topografia;
                * Geologia;
                * Pedologia (estudo do solo);
                * Drenagem;
                * Clima e microclima;
                * Castas (categorias);
                * Interven√ß√£o humana;
                * Cultura, hist√≥ria e tradi√ß√£o.

            ## Ent√£o como o clima influencia na produ√ß√£o e caracter√≠stica do vinho?

            Os meteorologistas definem o clima e seus componentes como os par√¢metros e varia√ß√µes de: temperatura, precipita√ß√µes (chuva, neve, granizo) e massas de ar de um lugar determinado. Estes dependem da proximidade do tr√≥pico ou c√≠rculo polar, al√©m da presen√ßa de massas de √°gua (como mares, lagos e rios) ou barreiras de ar (cordilheiras). 

            ## :red[Portanto, as caracter√≠sticas do terroir determinam a qualidade na produ√ß√£o do vinho, sendo que o clima √© apenas uma parte dessa contribui√ß√£o, por√©m muito importante no processo de produ√ß√£o da bebida.]  ##

            No mundo do vinho falamos de vinhos de clima frio ou clima quente. √â uma generaliza√ß√£o, por√©m permite realizar compara√ß√µes. Anotem: a geologia e o solo do vinhedo n√£o s√£o t√£o decisivos quanto as diferen√ßas clim√°ticas. A geologia, mais que tudo, √© respons√°vel pelas express√µes sutis nas caracter√≠sticas dos vinhos dentro de um mesmo clima ou regi√£o.

            As influ√™ncias clim√°ticas de uma zona influem em grande parte no tipo de variedades que ser√£o cultivadas, mas tamb√©m no tipo de pr√°ticas vitivin√≠colas. As parreiras pedem a presen√ßa de sol, calor e √°gua para seu desenvolvimento saud√°vel. Al√©m disso, a luz (a quantidade de dias ensolarados durante o ano) influi inclusive sobre a lat√™ncia que se produz ap√≥s a colheita, quando a videira essencialmente se fecha e reserva sua energia para o come√ßo do ciclo de crescimento do pr√≥ximo ano.

            De igual import√¢ncia √© a quantidade de chuva (e a necessidade de irriga√ß√£o complementar). Em m√©dia, uma videira necessita em torno de 710 mm de √°gua para o sustento durante a temporada de crescimento. No Mediterr√¢neo e em muitos climas continentais, o clima durante a esta√ß√£o de crescimento pode ser bastante seco e requer irriga√ß√£o adicional.

            Outros fatores clim√°ticos, como o vento e sua intensidade, a umidade, como √© o caso da neblina, a press√£o atmosf√©rica e as varia√ß√µes de temperatura, podem definir diferentes categorias clim√°ticas e influir fortemente na viticultura de uma √°rea.

            """)

  


